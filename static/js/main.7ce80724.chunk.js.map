{"version":3,"sources":["utils/constants.ts","services/getIssues.ts","atoms/Spinner/index.tsx","organisms/Search/index.tsx","atoms/User/index.tsx","utils/types.ts","atoms/Label/index.tsx","molecules/Issue/index.tsx","molecules/Header/index.tsx","organisms/Issues/index.tsx","molecules/Pagination/index.tsx","pages/Home/index.tsx","serviceWorker.ts","index.tsx"],"names":["API_URL","getIssues","a","owner","repo","page","perPage","fetch","response","json","rotation","keyframes","Wrapper","styled","div","Spinner","form","Container","Label","label","Input","input","ButtonWrapper","Button","button","Search","handleSearch","handleReset","useState","currentOwner","setCurrentOwner","currentRepo","setCurrentRepo","useEffect","onSubmit","event","preventDefault","onReset","changeOwner","useCallback","e","target","value","changeRepo","htmlFor","data-testid","type","id","aria-label","onChange","placeholder","onClick","disabled","Type","AuthorAssociation","State","Avatar","img","Username","span","user","href","url","rel","src","avatar_url","alt","login","p","color","name","Open","css","Closed","IssueContent","IssueTitle","Labels","PRLink","data","User","title","state","labels","map","index","key","pull_request","html_url","Text","Title","issues","Header","issue","Issue","number","PreviousNextButton","Page","ActivePage","Pagination","pageCount","currentPage","goToPage","Home","setIssues","pending","setPending","setPageCount","setCurrentPage","repoValues","setRepoValues","shouldFetch","setShouldFetch","error","setError","fetchIssues","pageNumber","Array","isArray","Error","length","window","scrollTo","top","behavior","changePage","Issues","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7ce80724.chunk.js","sourcesContent":["export const API_URL = 'https://api.github.com';\n\nexport const ISSUES_PER_PAGE = 20;","import { API_URL, ISSUES_PER_PAGE } from 'src/utils/constants';\n\ninterface Params {\n  owner: string;\n  repo: string;\n  page?: number;\n  perPage?: number;\n}\n\nexport default async function getIssues({\n  owner,\n  repo,\n  page = 1,\n  perPage = ISSUES_PER_PAGE,\n}: Params) {\n  const response = await fetch(\n    `${API_URL}/repos/${owner}/${repo}/issues?page=${page}&per_page=${perPage}`\n  );\n  return response.json();\n}\n","import styled, { keyframes } from 'styled-components';\nimport React from 'react';\n\nconst rotation = keyframes`\n  0% {\n      transform: rotate(0deg);\n    }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border: 8px solid #565c88;\n    border-radius: 50%;\n    animation: ${rotation} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #565c88 transparent transparent transparent;\n  }\n\n  div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n\n  div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n\n  div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n`;\n\nconst Spinner = () => (\n  <Wrapper>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </Wrapper>\n);\n\nexport default Spinner;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #565c88;\n  margin: 0 auto;\n  width: 75%;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst Label = styled.label`\n  font-size: 2rem;\n  margin-top: 2rem;\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  margin: 1rem;\n  padding: 10px;\n  font-size: 1rem;\n  border: 1px solid #565c88;\n  background: transparent;\n  border-radius: 5px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  margin: 1rem;\n  padding: 10px;\n  font-size: 1rem;\n  border: 1px solid #565c88;\n  background: transparent;\n  color: #565c88;\n  border-radius: 5px;\n\n  :hover {\n    border: 1px solid #565c88;\n    background: #565c88;\n    color: #f4f5fa;\n  }\n\n  :disabled {\n    color: #bdc5ff;\n    border: 1px solid #bdc5ff;\n    background: transparent;\n    cursor: not-allowed;\n  }\n`;\n\ninterface Props {\n  handleSearch: ({ owner, repo }: { owner: string; repo: string }) => void;\n  handleReset: () => void;\n  owner: string;\n  repo: string;\n}\n\nexport default function Search({\n  handleSearch,\n  handleReset,\n  owner,\n  repo,\n}: Props) {\n  const [currentOwner, setCurrentOwner] = useState('');\n  const [currentRepo, setCurrentRepo] = useState('');\n\n  useEffect(() => {\n    setCurrentOwner(owner);\n    setCurrentRepo(repo);\n  }, [owner, repo]);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    handleSearch({ owner: currentOwner, repo: currentRepo });\n  };\n\n  const onReset = (event: React.FormEvent) => {\n    event.preventDefault();\n    setCurrentOwner('');\n    setCurrentRepo('');\n    handleReset();\n  };\n\n  const changeOwner = useCallback((e) => {\n    setCurrentOwner(e.target.value);\n  }, []);\n\n  const changeRepo = useCallback((e) => {\n    setCurrentRepo(e.target.value);\n  }, []);\n\n  return (\n    <>\n      <Wrapper onSubmit={onSubmit} onReset={onReset}>\n        <Label htmlFor=\"issues\">\n          Search with the name of the repository's owner and the repository name\n        </Label>\n        <Container>\n          <Input\n            data-testid=\"input-owner\"\n            type=\"text\"\n            id=\"owner\"\n            aria-label=\"owner\"\n            onChange={changeOwner}\n            value={currentOwner}\n            placeholder=\"facebook\"\n          />\n          <Input\n            data-testid=\"input-repo\"\n            type=\"text\"\n            id=\"repository\"\n            aria-label=\"repository\"\n            onChange={changeRepo}\n            value={currentRepo}\n            placeholder=\"react\"\n          />\n          <ButtonWrapper>\n            <Button\n              type=\"submit\"\n              data-testid=\"search\"\n              onClick={onSubmit}\n              disabled={currentOwner === '' || currentRepo === ''}\n            >\n              Search\n            </Button>\n            <Button type=\"reset\" onClick={onReset}>\n              Reset\n            </Button>\n          </ButtonWrapper>\n        </Container>\n      </Wrapper>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { User } from 'src/utils/types';\n\nconst Wrapper = styled.a`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  text-decoration: none;\n  width: 50px;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 40px;\n  width: 40px;\n`;\n\nconst Username = styled.span`\n  color: #565c88;\n  font-size: 14px;\n  margin: 0;\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  width: 50px;\n`;\n\nexport default ({ user }: { user: User }) => (\n  <Wrapper href={user.url} rel=\"noopener noreferrer\">\n    <Avatar src={user.avatar_url} alt={user.login} />\n    <Username>{user.login}</Username>\n  </Wrapper>\n);\n","export interface Issue {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: State;\n  locked: boolean;\n  assignee: User | null;\n  assignees: User[];\n  milestone: null;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at: null;\n  author_association: AuthorAssociation;\n  active_lock_reason: null;\n  pull_request?: PullRequest;\n  body: string;\n  performed_via_github_app: null;\n}\n\nexport interface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: Type;\n  site_admin: boolean;\n}\n\nexport enum Type {\n  User = 'User',\n}\n\nexport enum AuthorAssociation {\n  Contributor = 'CONTRIBUTOR',\n  Member = 'MEMBER',\n  None = 'NONE',\n}\n\nexport interface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string | null;\n}\n\nexport interface PullRequest {\n  url: string;\n  html_url: string;\n  diff_url: string;\n  patch_url: string;\n}\n\nexport enum State {\n  Open = 'open',\n  Closed = 'closed',\n  All = 'all',\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { State } from 'src/utils/types';\n\ninterface Props {\n  name: string;\n  color?: string;\n}\n\nconst Wrapper = styled.p<Props>`\n  border: 1px solid ${({ color }) => `#${color}`};\n  border-radius: 31px;\n  font-size: 12px;\n  padding: 2px 7px;\n  margin: 2px 5px;\n  cursor: default;\n\n  ${({ name }) =>\n    name === State.Open &&\n    css`\n      background-color: #f3fff4;\n      border: 1px solid #2ba238;\n      color: #2ba238;\n    `}\n  ${({ name }) =>\n    name === State.Closed &&\n    css`\n      background-color: #fbefee;\n      border: 1px solid #f9706a;\n      color: #f9706a;\n    `}\n`;\n\nexport default ({ name, color }: Props) => (\n  <Wrapper name={name} color={color}>\n    {name}\n  </Wrapper>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Issue } from 'src/utils/types';\nimport User from 'src/atoms/User';\nimport Label from 'src/atoms/Label';\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 50px 1fr 50px;\n  padding: 10px;\n  background-color: #ffffff;\n  width: 100%;\n  margin: 5px 0;\n  border-radius: 5px;\n\n  :hover {\n    background-color: #d9ddff;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr 50px;\n  }\n`;\n\nconst IssueContent = styled.div`\n  align-items: baseline;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 15px;\n`;\n\nconst IssueTitle = styled.a`\n  color: #565c88;\n  text-decoration: none;\n  font-size: 18px;\n  margin: 0;\n`;\n\nconst Labels = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PRLink = styled.a`\n  text-align: center;\n  color: #565c88;\n`;\n\nexport default ({ data }: { data: Issue }) => {\n  return (\n    <Wrapper>\n      <User user={data.user} />\n      <IssueContent>\n        <IssueTitle href={data.url}>{data.title}</IssueTitle>\n        <Labels>\n          <Label name={data.state} />\n          {data.labels.map((label, index) => (\n            <Label\n              name={label.name}\n              color={label.color}\n              key={`${index}-${label}`}\n            />\n          ))}\n        </Labels>\n      </IssueContent>\n      {data.pull_request?.html_url && (\n        <PRLink\n          href={data.pull_request?.html_url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          PR\n        </PRLink>\n      )}\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 50px 1fr 50px;\n  padding: 10px;\n  width: 100%;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr 50px;\n  }\n`;\n\nconst Text = styled.p`\n  text-align: center;\n`;\n\nconst Title = styled(Text)`\n  margin: 0 15px;\n  text-align: left;\n`;\n\nexport default () => {\n  return (\n    <Wrapper>\n      <Text>User</Text>\n      <Title>Title of the issue</Title>\n      <Text>PR</Text>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Issue as IssueType } from 'src/utils/types';\nimport Issue from 'src/molecules/Issue';\nimport Header from 'src/molecules/Header';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  width: 75%;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport default ({ issues }: { issues: IssueType[] }) => (\n  <Wrapper>\n    <Header />\n    {issues.map((issue) => (\n      <Issue data={issue} key={issue.number} />\n    ))}\n  </Wrapper>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Pagination {\n  pageCount: number;\n  currentPage: number;\n  goToPage: (pageNumber: number) => void;\n}\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-evenly;\n  list-style: none;\n  padding: 0;\n  color: #565c88;\n  width: 100%;\n`;\n\nconst PreviousNextButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 30px;\n  background: transparent;\n  border: 0;\n  color: #565c88;\n  font-size: 1rem;\n\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Page = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 30px;\n  background: transparent;\n  border: 0;\n  color: #565c88;\n  font-size: 1rem;\n\n  :hover {\n    border: solid 1px #565c88;\n    border-radius: 50%;\n  }\n`;\n\nconst ActivePage = styled.p`\n  background-color: #565c88;\n  border: solid 1px #565c88;\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n  width: 30px;\n  font-size: 1rem;\n`;\n\nexport default function Pagination({\n  pageCount,\n  currentPage,\n  goToPage,\n}: Pagination) {\n  return (\n    <Wrapper>\n      {currentPage > 1 && (\n        <>\n          <PreviousNextButton onClick={() => goToPage(currentPage - 1)}>\n            Previous\n          </PreviousNextButton>\n          <Page onClick={() => goToPage(currentPage - 1)}>\n            {currentPage - 1}\n          </Page>\n        </>\n      )}\n      <ActivePage>{currentPage}</ActivePage>\n      {currentPage < pageCount && (\n        <>\n          <Page onClick={() => goToPage(currentPage + 1)}>\n            {currentPage + 1}\n          </Page>\n          <PreviousNextButton onClick={() => goToPage(currentPage + 1)}>\n            Next\n          </PreviousNextButton>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport getIssues from 'src/services/getIssues';\nimport Spinner from 'src/atoms/Spinner';\nimport Search from 'src/organisms/Search';\nimport Issues from 'src/organisms/Issues';\nimport Pagination from 'src/molecules/Pagination';\nimport { Issue } from 'src/utils/types';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Home = () => {\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const [pending, setPending] = useState(true);\n  const [pageCount, setPageCount] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [repoValues, setRepoValues] = useState({ repo: '', owner: '' });\n  const [shouldFetch, setShouldFetch] = useState(false);\n  const [error, setError] = useState('');\n\n  // Methods\n  const fetchIssues = useCallback(\n    async (pageNumber) => {\n      setPending(true);\n\n      try {\n        const data = await getIssues({\n          owner: repoValues.owner,\n          repo: repoValues.repo,\n          page: pageNumber,\n        });\n        if (!Array.isArray(data)) {\n          throw new Error();\n        }\n\n        setIssues(data);\n        if (data.length === 20) {\n          setPageCount(pageCount + 1);\n        }\n        setPending(false);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      } catch (e) {\n        setError('Invalid repository');\n        setPending(false);\n      }\n    },\n    [repoValues.owner, repoValues.repo, pageCount]\n  );\n\n  const changePage = useCallback(\n    (pageNumber: number) => {\n      fetchIssues(pageNumber);\n      setCurrentPage(pageNumber);\n    },\n    [fetchIssues]\n  );\n\n  const handleSearch = useCallback(\n    ({ owner, repo }: { owner: string; repo: string }) => {\n      setRepoValues({ owner, repo });\n      setShouldFetch(true);\n      setError('');\n    },\n    []\n  );\n\n  const handleReset = useCallback(() => {\n    setPending(true);\n    setIssues([]);\n    setCurrentPage(1);\n    setPageCount(1);\n    setRepoValues({ owner: '', repo: '' });\n  }, [setIssues, setRepoValues, setCurrentPage, setPageCount]);\n\n  useEffect(() => {\n    if (shouldFetch) {\n      fetchIssues(1);\n      setShouldFetch(false);\n    }\n  }, [fetchIssues, shouldFetch]);\n\n  // Rendering\n  return (\n    <Wrapper>\n      <Search\n        handleSearch={handleSearch}\n        handleReset={handleReset}\n        repo={repoValues.repo}\n        owner={repoValues.owner}\n      />\n      {pending && <Spinner />}\n      {error !== '' && !pending && <p>{error}</p>}\n\n      {error === '' && !pending && issues.length === 0 && <p>No issues :)</p>}\n      {error === '' && !pending && issues.length > 0 && (\n        <>\n          <Issues issues={issues} />\n          <Pagination\n            currentPage={currentPage}\n            pageCount={pageCount}\n            goToPage={changePage}\n          />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}